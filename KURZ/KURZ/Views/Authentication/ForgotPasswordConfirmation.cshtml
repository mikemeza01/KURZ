@model KURZ.Entities.UsersBinding;
@{
    ViewData["Title"] = "Confirmación de cambio de contraseña";
    Layout = "_Authentication";
}
<form asp-action="ForgotPasswordConfirmation" novalidate>
    <input type="hidden" id="username" name="USERNAME" value="@ViewBag.username">
    <input type="hidden" id="token" name="TOKEN" value="@ViewBag.token">
    <div class="form-group">
        <div class="form-group">
            <label class="form-label" asp-for="PASSWORD"></label>
            <input asp-for="PASSWORD" type="password" class="form-control" placeholder="Ingrese una nueva contraseña" />
            <span asp-validation-for="PASSWORD" style="color:red"></span>
        </div>
        <div class="form-group">
            <label class="form-label" asp-for="PASSWORD_REPEAT"></label>
            <input asp-for="PASSWORD_REPEAT" type="password" class="form-control" placeholder="Repetir nueva contraseña" />
            <span asp-validation-for="PASSWORD_REPEAT" style="color:red"></span>
        </div>
    </div>
    <div class="form-group text-center">
        <button class="btn btn-block btn-primary mb-2" type="submit">Reestablecer Contraseña</button>
    </div>
    @{
        if (@ViewBag.mensaje == "SUCCESS")
        {
            @Html.Raw("<script> $(document).ready(function() {\r\n         alertaSuccess();\r\n      });       </script>")
            ;

        }
    }

    @{
        if (@ViewBag.mensaje == "ERRORTOKEN")
        {
            @Html.Raw("<script> $(document).ready(function() {\r\n         alertaErrorToken();\r\n      });       </script>")
            ;

        }
    }

    @{
        if (@ViewBag.mensaje == "ERRORPASSWORD")
        {
            @Html.Raw("<script> $(document).ready(function() {\r\n         alertaError();\r\n      });       </script>")
            ;

        }
    }

</form>

<script>

    function alertaSuccess() {
        Swal.fire({
            position: 'top-center',
            icon: 'success',
            title: 'Contraseña actualizada.',
            text: 'La contraseña a sido actualizada correctamente',
            timer: 3000,
            showConfirmButton: true
        }).then((result) => {
            if (result.isConfirmed) {
                window.location.href = '/Authentication/Login';
            }
        });
        setTimeout(() => {
            window.location.href = '/Authentication/Login';
        }, 3000);
    }

    function alertaErrorToken() {
        Swal.fire({
            position: 'top-center',
            icon: 'error',
            title: 'Error de Token',
            text: 'No corresponde el token con el usuario, intentelo nuevamente desde el correo que recibio para activar la cuenta.',
            showConfirmButton: true
        })
    }

    function alertaError() {
        if (email !== '') {
            Swal.fire({
                position: 'top-center',
                icon: 'error',
                title: 'Error al cambiar la contraseña',
                text: 'Hubo un error al cambiar la contraseña.',
                showConfirmButton: true
            })
        }
    }

</script>